plugins {
	id 'org.springframework.boot' version '2.5.7'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
    id 'idea'
	id 'pmd'
	id 'checkstyle'
	id 'jacoco'
	id 'org.sonarqube' version '3.3'
	id 'nebula.info' version '5.0.0'
	
}

apply plugin: 'project-report'
group = 'com.test.test_app'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven {
      url "https://plugins.gradle.org/m2/"
    }
}

ext['tomcat.version'] = '9.0.58'
ext['spring-core.version'] = '5.3.14'
ext['springfox-swagger2.version'] = '3.0.0'
ext['swagger-ui'] = '4.1.3'
ext['spring-web'] = '5.3.21'
ext['spring-core'] = '5.3.19'
ext['spring-expression'] = '6.0.0-M3'
ext['spring-context'] = '5.3.19'
ext['swagger-ui'] = '4.1.3'
apply {
	from "$rootDir/config/build/codeQuality.gradle"
}
configurations.all {
resolutionStrategy {
            eachDependency { DependencyResolveDetails details ->
                if (details.requested.group == 'com.squareup.okhttp3' && details.requested.name == 'okhttp' ) {
                    details.useVersion("4.9.2")
                }
                if (details.requested.group == 'org.mockito' && details.requested.name == 'mockito-inline' ) {
                    details.useVersion("3.8.0")
                }
                if (details.requested.group == 'com.fasterxml.jackson.core' && details.requested.name == 'jackson-databind' ) {
                    details.useVersion("2.13.2.1")
                }
                if (details.requested.group == 'org.springframework' && details.requested.name == 'spring-webmvc' ) {
                    details.useVersion("5.3.18")
                }
                if (details.requested.group == 'org.springframework' && details.requested.name == 'spring-web' ) {
                    details.useVersion("5.3.19")
                }
                if (details.requested.group == 'org.springframework' && details.requested.name == 'spring-core' ) {
                    details.useVersion("5.3.19")
                }
                if (details.requested.group == 'org.springframework' && details.requested.name == 'spring-context' ) {
                    details.useVersion("5.3.19")
                }
                if (details.requested.group == 'org.webjars' && details.requested.name == 'swagger-ui' ) {
                    details.useVersion("4.1.3")
                }
                if (details.requested.group == 'org.springframework' && details.requested.name == 'spring-expression' ) {
                    details.useVersion("5.3.18")
                }
                if (details.requested.group == 'io.springfox' && details.requested.name == 'springfox-swagger2' ) {
                    details.useVersion("3.0.0")
                }
                //if (details.requested.group == 'ch.qos.logback' && details.requested.name == 'logback-classic' ) {
                  //  details.useVersion("1.3.0-alpha11")
                //}
                //if (details.requested.group == 'ch.qos.logback' && details.requested.name == 'logback-core' ) {
                //    details.useVersion("1.2.7")
                //}
                //if (details.requested.group == 'ch.qos.logback' && details.requested.name == 'logback-classic' ) {
                //   details.useVersion("1.3.0-alpha11")
                //}
            }
        }
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-quartz'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
    
    implementation 'com.fasterxml.jackson.core:jackson-core:2.13.1'
	implementation 'ch.qos.logback.contrib:logback-json-classic:0.1.2'
	implementation 'ch.qos.logback.contrib:logback-jackson:0.1.5'
    implementation 'ch.qos.logback.contrib:logback-json-classic:0.1.5'
    testImplementation 'ch.qos.logback:logback-classic:1.3.0-alpha14'
   // https://mvnrepository.com/artifact/com.yugabyte/jdbc-yugabytedb
    implementation group: 'com.yugabyte', name: 'jdbc-yugabytedb', version: '42.3.4'
   // https://mvnrepository.com/artifact/org.postgresql/postgresql
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.4.1'
   
    
	implementation ('org.springdoc:springdoc-openapi-ui:1.5.2'){
		exclude group: 'io.github.classgraph', module: 'classgraph'
	}
    implementation 'io.springfox:springfox-swagger2:3.0.0'
    implementation 'io.springfox:springfox-swagger-ui:3.0.0'
	
	implementation 'org.apache.commons:commons-lang3:3.8.1'
	implementation 'org.apache.httpcomponents:httpclient:4.5.13'
	implementation 'io.minio:minio:8.3.0'
	compileOnly 'org.projectlombok:lombok'
	implementation 'org.springframework.retry:spring-retry:1.3.1'
	implementation 'mysql:mysql-connector-java:8.0.28'
	implementation 'commons-io:commons-io:2.8.0'
	compile group: 'com.mchange', name: 'c3p0', version: '0.9.5.5'
	
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework:spring-aspects:5.3.9'
	implementation 'org.springframework.boot:spring-boot-starter-validation:2.5.2'
	
	compileOnly 'org.projectlombok:lombok:1.18.20'
	annotationProcessor 'org.projectlombok:lombok:1.18.20'
	
	implementation 'net.sourceforge.pmd:pmd:6.12.0'
	implementation ('com.puppycrawl.tools:checkstyle:8.29'){
		exclude group: 'com.google.guava', module: 'guava'
		exclude group: 'commons-beanutils', module: 'commons-beanutils'
	}
	
	testCompileOnly 'org.projectlombok:lombok:1.18.20'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.20'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	implementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    implementation ('io.fabric8:kubernetes-client:5.0.3'){
        exclude group: 'com.google.protobuf', module: 'protobuf-java'
    }
    implementation ('io.kubernetes:client-java:13.0.0'){
        exclude group: 'com.google.protobuf', module: 'protobuf-java'
    }
    
	//Test dependencies
   
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    //testImplementation 'io.netty:netty-codec-http:4.1.31.Final'
    //testImplementation "org.mockito:mockito-core:2.1.0"
    testImplementation("com.h2database:h2")
    testImplementation("com.opencsv:opencsv:4.1")
    
    //testImplementation 'io.rest-assured:rest-assured:3.0.3'
    //testImplementation "org.mockito:mockito-core:${mockitoVersion}"
    
    // https://mvnrepository.com/artifact/uk.org.webcompere/system-stubs-core
    implementation 'uk.org.webcompere:system-stubs-core:1.2.0'
    
    //testRuntimeOnly "org.powermock:powermock-module-junit4:${powerMockVersion}"
    //testRuntimeOnly "org.powermock:powermock-api-mockito2:${powerMockVersion}"
	}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:2020.0.3"
	}
}

test {
    useJUnitPlatform()
}
test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}
jacocoTestReport {
    dependsOn test // tests are required to run before generating the report

}
jar{
    from{
        ["/scripts/test.py"]
    }
}
